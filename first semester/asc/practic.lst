     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, scanf, fprintf, fopen, fclose, fread, printf, socket
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  import socket msvcrt.dll
    14                                  ;
    15                                  segment data use32 class=data
    16 00000000 6100                        mod_access db "a",0
    17 00000002 FFFFFFFF                    handler dd -1
    18 00000006 <res 0000001E>              nume resb 30
    19 00000024 257300                      format db "%s",0
    20 00000027 256300                      format_char db "%c", 0
    21 0000002A 256400                      format2 db "%d", 0
    22 0000002D 7200                        read_mode db "r", 0
    23                                      len equ 100
    24 0000002F 00<rept>                    text times len db 0
    25 00000093 FFFFFFFF                    desc dd -1
    26 00000097 6F75747075742E7478-         dest db 'output.txt',0
    26 000000A0 7400               
    27 000000A2 46696C656E616D653A-         mesaj db 'Filename: ', 0
    27 000000AB 2000               
    28 000000AD 7700                        write_mode db "w",0
    29                                  
    30                                  segment code use32 class=code
    31                                      start:
    32                                         
    33 00000000 68[A2000000]                    push dword mesaj
    34 00000005 68[24000000]                    push dword format
    35 0000000A FF15[00000000]                  call [printf]
    36 00000010 83C408                          add esp, 4*2
    37                                          
    38                                          ;scanf(format, nume)
    39 00000013 68[06000000]                    push dword nume
    40 00000018 68[24000000]                    push dword format
    41 0000001D FF15[00000000]                  call [scanf]
    42 00000023 83C408                          add esp, 4*2
    43                                          ;-------------------- CITIM NUME FISIER
    44                                          ;fopen(nume, readmode)
    45 00000026 68[2D000000]                    push dword read_mode
    46 0000002B 68[06000000]                    push dword nume
    47 00000030 FF15[00000000]                  call [fopen]
    48 00000036 83C408                          add esp, 8
    49                                          ;--------------------DESCHIS PENTRU CITIRE
    50 00000039 83F800                          cmp eax, 0
    51 0000003C 0F84BC000000                    je final
    52 00000042 A3[93000000]                    mov [desc], eax
    53                                          
    54 00000047 68[AD000000]                    push dword write_mode
    55 0000004C 68[97000000]                    push dword dest
    56 00000051 FF15[00000000]                  call [fopen]
    57 00000057 83C408                          add esp, 4*2
    58                                          
    59                                          
    60                                          ;fopen(nume, mode)
    61 0000005A 68[00000000]                    push dword mod_access
    62 0000005F 68[97000000]                    push dword dest
    63 00000064 FF15[00000000]                  call [fopen]
    64 0000006A 83C408                          add esp, 4*2
    65 0000006D 83F800                          cmp eax, 0
    66 00000070 0F8488000000                    je final
    67 00000076 A3[02000000]                    mov [handler], eax
    68                                          
    69                                          
    70                                          bucla:
    71                                          ;fread(text, 1, len, desc)
    72 0000007B FF35[93000000]                  push dword [desc]
    73 00000081 6A64                            push dword len
    74 00000083 6A01                            push dword 1
    75 00000085 68[2F000000]                    push dword text
    76 0000008A FF15[00000000]                  call [fread]
    77 00000090 83C410                          add esp, 4*4
    78                                          
    79 00000093 83F800                          cmp eax, 0
    80 00000096 7466                            jz final
    81                                          ;----------------------------- 
    82 00000098 BE[2F000000]                    mov esi, text
    83 0000009D 89C1                            mov ecx, eax
    84 0000009F FC                              cld
    85                                          repeta:
    86 000000A0 B800000000                      mov eax, 0
    87 000000A5 AC                              lodsb
    88 000000A6 51                              push ecx
    89 000000A7 3C30                            cmp al, '0'
    90 000000A9 721B                            jb not_cifra
    91 000000AB 3C39                            cmp al, '9'
    92 000000AD 7717                            ja not_cifra
    93                                          
    94 000000AF 50                              push dword eax
    95 000000B0 68[2A000000]                    push dword format2
    96 000000B5 FF35[02000000]                  push dword [handler]
    97 000000BB FF15[00000000]                  call [fprintf]
    98 000000C1 83C40C                          add esp, 4*3
    99                                          
   100 000000C4 EB15                            jmp final_loop
   101                                          not_cifra:
   102                                          ;fprintf(desc, format, mesaj)
   103 000000C6 50                              push dword eax
   104 000000C7 68[27000000]                    push dword format_char
   105 000000CC FF35[02000000]                  push dword [handler]
   106 000000D2 FF15[00000000]                  call [fprintf]
   107 000000D8 83C40C                          add esp, 4*3
   108                                          final_loop:
   109 000000DB 59                              pop ecx
   110 000000DC E2C2                            loop repeta
   111 000000DE EB9B                            jmp bucla
   112                                          ;------------------------
   113                                          
   114 000000E0 FF35[02000000]                  push dword [handler]
   115 000000E6 FF15[00000000]                  call [fclose]
   116 000000EC 83C404                          add esp, 4
   117                                          ;fclose(desc)
   118 000000EF FF35[93000000]                  push dword [desc]
   119 000000F5 FF15[00000000]                  call [fclose]
   120 000000FB 83C404                          add esp, 4
   121                                          final:
   122                                          ; exit(0)
   123 000000FE 6A00                            push    dword 0
   124 00000100 FF15[00000000]                  call    [exit]
